Given an array of strings, group anagrams together.

For example, given: ["eat", "tea", "tan", "ate", "nat", "bat"], 
Return:

[
  ["ate", "eat","tea"],
  ["nat","tan"],
  ["bat"]
]
======================================================
Straightforward solution
sort the strings in alphabetical order so that "ate", "eat" and "tea" will all return "aet"
use a hashmap to group all the strings in one list by the sorted pattern

k is the length of the longest string in strs array
Time: O(Nklgk)
Space: O(N)
========================codes=========================
class Solution {
    public List<List<String>> groupAnagrams(String[] strs) {
        List<List<String>> result = new ArrayList<>();
        HashMap<String, List<String>> map = new HashMap<>();
        
        for(String s: strs){
            char[] ch = s.toCharArray();
            Arrays.sort(ch);       			//O(klgk)
            String changed = Arrays.toString(ch);
            
            if(map.containsKey(changed)){   		//O(1)
                map.get(changed).add(s);
            }else{
                List<String> list = new ArrayList<>();
                list.add(s);
                map.put(changed, list);
            }
        }
        
        result.addAll(map.values());
        return result;
    }
}
