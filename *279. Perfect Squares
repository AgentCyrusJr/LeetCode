Given a positive integer n, find the least number of perfect square numbers (for example, 1, 4, 9, 16, ...) which sum to n.

For example, given n = 12, return 3 because 12 = 4 + 4 + 4; given n = 13, return 2 because 13 = 4 + 9.
=========codes===========
//by birdhkl 
public class Solution {
    public int numSquares(int n) {
       int state[] = new int [n+1];
		int maxSquare = (int) Math.sqrt(n);
		int positive;
		for(int i=0;i<=n;i++){
			state[i] = Integer.MAX_VALUE;
		}
		for(int i=0;i<=maxSquare;i++){
			state [i*i] = 1; 
		}
		
		for(int i=1;i<=maxSquare;i++){
			positive = i*i;
			
			for(int j=positive;j<=n-positive;j++){
				if (state[j]+state[positive]<state[j+positive]) {
					state[j+positive]= state[j]+state[positive];
				}
			}
		}
		return state[n]; 
    }
}
