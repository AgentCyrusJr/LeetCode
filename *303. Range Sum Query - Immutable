Given an integer array nums, find the sum of the elements between indices i and j (i â‰¤ j), inclusive.

Example:
Given nums = [-2, 0, 3, -5, 2, -1]

sumRange(0, 2) -> 1
sumRange(2, 5) -> -1
sumRange(0, 5) -> -3
Note:
You may assume that the array does not change.
There are many calls to sumRange function.
======================code====================
//by MadDetective
//sum[i] is the sum before i. (0~i-1). If we want to sum range (i~j), just sum[j+1] - sum[i] .
public class NumArray {
    int[] sum;
    public NumArray(int[] nums) {
        final int N = nums.length;
        sum = new int[N+1];
        for(int i=1; i<=N; i++){
            sum[i] = sum[i-1] + nums[i-1];
        }
    }

    public int sumRange(int i, int j) {
        return sum[j+1] - sum[i];
    }
}
