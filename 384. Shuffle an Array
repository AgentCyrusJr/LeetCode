Shuffle a set of numbers without duplicates.

Example:

// Init an array with set 1, 2, and 3.
int[] nums = {1,2,3};
Solution solution = new Solution(nums);

// Shuffle the array [1,2,3] and return its result. Any permutation of [1,2,3] must equally likely to be returned.
solution.shuffle();

// Resets the array back to its original configuration [1,2,3].
solution.reset();

// Returns the random shuffling of array [1,2,3].
solution.shuffle();
=====================code====================
public class Solution {

    ArrayList<Integer> al;
      int length;
      int[] copy = null;
	public Solution(int[] nums) {
		
		if(nums != null){
	        al = new ArrayList<Integer>();
	        copy = nums;
	        for(int i : nums){
	        	al.add(i);
	        }
	        length = nums.length;
		}else
			length = 0;
    }
    /** Resets the array to its original configuration and return it. */
    public int[] reset() {
    	return copy;
    }
    
    /** Returns a random shuffling of the array. */
    public int[] shuffle() {
    	int[] rand = new int[copy.length];
        for (int i = 0; i < copy.length; i++){
            int r = (int) (Math.random() * (i+1));
            rand[i] = rand[r];
            rand[r] = copy[i];
        }
        return rand;
    }
}

/**
 * Your Solution object will be instantiated and called as such:
 * Solution obj = new Solution(nums);
 * int[] param_1 = obj.reset();
 * int[] param_2 = obj.shuffle();
 */
