Given an unsorted array nums, reorder it such that nums[0] < nums[1] > nums[2] < nums[3]....

Example:
(1) Given nums = [1, 5, 1, 1, 6, 4], one possible answer is [1, 4, 1, 5, 1, 6]. 
(2) Given nums = [1, 3, 2, 2, 3, 1], one possible answer is [2, 3, 1, 3, 1, 2].

Note:
You may assume all input has valid answer.

Follow Up:
Can you do it in O(n) time and/or in-place with O(1) extra space?
=====================codes=================
public class Solution {
    public void wiggleSort(int[] nums) {
        if(nums.length == 0) return;
		int[] copy = nums.clone();
		Arrays.sort(copy);
		if(nums.length%2 ==0){
			for(int i = 0 ; i < nums.length; i = i + 2){
				nums[nums.length-1-i] = copy[(i+nums.length)/2];
			}
			for(int j = 1 ; j < nums.length; j = j +2){
				nums[nums.length-1-j] = copy[(j-1)/2];
			}
		}else{
			for(int i = 0 ; i < nums.length; i = i + 2){
				nums[nums.length-1-i] = copy[i/2];
			}
			for(int j = 1 ; j < nums.length; j = j +2){
				nums[nums.length-1-j] = copy[(j+nums.length)/2];
			}
		}
    }
}
