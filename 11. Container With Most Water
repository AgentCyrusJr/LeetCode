Given n non-negative integers a1, a2, ..., an, where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). Find two lines, which together with x-axis forms a container, such that the container contains the most water.

Note: You may not slant the container.
=============codes==============
public class Solution {
    public int maxArea(int[] height) {
		if(height.length == 0 || height.length ==1) return 0;
		int i = 0; int j = height.length-1;
		int max = Integer.MIN_VALUE;
		int curr_max_i = 0, curr_max_j = 0;
		while(i<j){
			if((j-i)*(Math.min(height[j],height[i]))>max){
				curr_max_i = i;
				curr_max_j = j;
				max = (j-i)*(Math.min(height[j],height[i]));
			}
			if(height[i]>height[j]){
				j--;
			}else{
				i++;
			}
		}
		return max;
    }
}
