Given a list of words and two words word1 and word2, return the shortest distance between these two words in the list.

For example,
Assume that words = ["practice", "makes", "perfect", "coding", "makes"].

Given word1 = “coding”, word2 = “practice”, return 3.
Given word1 = "makes", word2 = "coding", return 1.

Note:
You may assume that word1 does not equal to word2, and word1 and word2 are both in the list.
==============codes=============
public class Solution {
    public int shortestDistance(String[] words, String word1, String word2) {
        int i1 = Integer.MAX_VALUE, i2 = Integer.MAX_VALUE;
        int min = Integer.MAX_VALUE;
		for(int i = 0 ; i < words.length; i++){
        	if(words[i].equals(word1)){
        		i1 = i;
        		if(i2 != Integer.MAX_VALUE){
        			min = Math.abs(i1-i2) < min? Math.abs(i1-i2):min;
        		}
        		
        	}
        	if(words[i].equals(word2)){
        		i2 = i;
        		if(i1 != Integer.MAX_VALUE){
        			min = Math.abs(i1-i2) < min? Math.abs(i1-i2):min;
        		}
        	}
        }
		return min;
    }
}
