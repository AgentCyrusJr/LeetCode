Given a binary tree, find its minimum depth.

The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.
=======================codes======================
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
   public int minDepth(TreeNode root) {
        if(root == null) return 0;
        else if(root.left!=null && root.right!=null){
        	return 1+ Math.min(this.minDepth(root.left), this.minDepth(root.right));
        }
        else if(root.left==null && root.right!=null){
        	return 1+ this.minDepth(root.right);
        }
        else if(root.left!=null && root.right==null){
        	return 1+ this.minDepth(root.left);
        }
        else
        	return 1;
    }
}

=====================
//by StefanPochmann 
public class Solution {
   public int minDepth(TreeNode root) {
    if (root == null) return 0;
    int L = minDepth(root.left), R = minDepth(root.right);
    return 1 + (Math.min(L, R) > 0 ? Math.min(L, R) : Math.max(L, R));
}
}
