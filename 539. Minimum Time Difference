Given a list of 24-hour clock time points in "Hour:Minutes" format, find the minimum minutes difference between any two time points in the list.

Example 1:
Input: ["23:59","00:00"]
Output: 1
Note:
The number of time points in the given list is at least 2 and won't exceed 20000.
The input time is legal and ranges from 00:00 to 23:59.
============codes==========
public class Solution {
    public int findMinDifference(List<String> timePoints) {
        int min = Integer.MAX_VALUE;
        Collections.sort(timePoints, new timeCompare());
        for(int i = 1 ; i < timePoints.size(); i++){
            String s1 = timePoints.get(i-1);
            String s2 = timePoints.get(i);
            String[] arr1 = s1.split(":");
            String[] arr2 = s2.split(":");
            int h_diff = Integer.parseInt(arr2[0]) - Integer.parseInt(arr1[0]);
            int m_diff = Integer.parseInt(arr2[1]) - Integer.parseInt(arr1[1]);
            int diff = Math.min((h_diff*60 + m_diff), 24*60-(h_diff*60 + m_diff));
            if(diff < min){
                min = diff;
            }
        }
        
        if(timePoints.size()>1){
            String s1 = timePoints.get(0);
            String s2 = timePoints.get(timePoints.size()-1);
            String[] arr1 = s1.split(":");
            String[] arr2 = s2.split(":");
            int h_diff = Integer.parseInt(arr2[0]) - Integer.parseInt(arr1[0]);
            int m_diff = Integer.parseInt(arr2[1]) - Integer.parseInt(arr1[1]);
            int diff = Math.min((h_diff*60 + m_diff), 24*60-(h_diff*60 + m_diff));
            if(diff < min){
                min = diff;
            }
            return min;
        }else{
            return 0;
        }
        
    }
    
}

class timeCompare implements Comparator<String>{
    @Override
    public int compare(String s1, String s2) {
        String[] arr1 = s1.split(":");
        String[] arr2 = s2.split(":");
        if( (Integer.parseInt(arr1[0]) < Integer.parseInt(arr2[0])) ||
            ((Integer.parseInt(arr1[0]) == Integer.parseInt(arr2[0])) && (Integer.parseInt(arr1[1]) < Integer.parseInt(arr2[1]))))
        {
            return -1;
        } else {
            return +1;
        }
    }
}
