Given an unsorted integer array, find the first missing positive integer.

For example,
Given [1,2,0] return 3,
and [3,4,-1,1] return 2.

Your algorithm should run in O(n) time and uses constant space.
==============codes================
class Solution {
    public int firstMissingPositive(int[] nums) {
        if(nums.length == 0) return 1;
        if(nums.length == 1) return nums[0]==1?2:1;
        int i = 0;
        
        while(i<nums.length){
            
            if(nums[i] >= 0 && nums[i] <nums.length && nums[i] != i && nums[nums[i]] != nums[i]){
                int temp        = nums[nums[i]];
                nums[nums[i]]   = nums[i];
                nums[i]         = temp;
            }else{
                i++;
            }
            
        }
        for(int j = 1 ; j < nums.length; j++){
            if(j != nums[j]){
                return j;
            }
        }
        return nums[0]==nums.length?nums.length+1:nums.length;
    }
    
}
