Given an array of n integers where n > 1, nums, return an array output such that output[i] is equal to the product of all the elements of nums except nums[i].

Solve it without division and in O(n).

For example, given [1,2,3,4], return [24,12,8,6].

Follow up:
Could you solve it with constant space complexity? (Note: The output array does not count as extra space for the purpose of space complexity analysis.)

===================codes==================
public class Solution {
    public int[] productExceptSelf(int[] nums) {
        int[] output = new int[nums.length];
        output[0] = 1;
        for(int i = 1; i < nums.length ; i ++){
        	output[i] = nums[i-1]*output[i-1];
        }
        int product = 1;
        for(int j = nums.length-2 ; j >= 0 ; j--){
        	product *= nums[j+1];
        	output[j] = output[j]*product;
        }
        
        return output;
    }
}
