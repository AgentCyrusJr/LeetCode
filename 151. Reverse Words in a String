Given an input string, reverse the string word by word.

For example,
Given s = "the sky is blue",
return "blue is sky the".

Update (2015-02-12):
For C programmers: Try to solve it in-place in O(1) space.

click to show clarification.

Clarification:
What constitutes a word?
A sequence of non-space characters constitutes a word.
Could the input string contain leading or trailing spaces?
Yes. However, your reversed string should not contain leading or trailing spaces.
How about multiple spaces between two words?
Reduce them to a single space in the reversed string.
=================codes==================
public class Solution {
    public String reverseWords(String s) {
	    s = s.trim();
		char[] ch = s.toCharArray();
		StringBuilder sb = new StringBuilder();
	    boolean firstSpace = true;
	    for(char c : ch){
	    	if(c!=' '){
	    		sb.append(c);
	    		firstSpace = true;
	    	}
	    	else if(c==' ' && firstSpace){
	    		sb.append(' ');
	    		firstSpace = false;
	    	}
	    }
	    char[] word = sb.toString().toCharArray();
		// Three step to reverse
	    // 1. reverse the whole sentence
	    
		reverse(word, 0, word.length - 1);
	    // 2. reverse each word
	    int start = 0;
	    for (int i = 0; i < word.length; i++) {
	        if (word[i] == ' ') {
	            reverse(word, start, i - 1);
	            start = i + 1;
	        }
	    }
	    // 3. reverse the last word, if there is only one word,which means there is no space included,
	    // this process will solve the corner case
	    reverse(word, start, word.length - 1);
	    return String.valueOf(word);
	}

	public void reverse(char[] s, int start, int end) {
	    while (start < end) {
	        char temp = s[start];
	        s[start] = s[end];
	        s[end] = temp;
	        start++;
	        end--;
	    }
	}
}
================================2017/10/23==============================
public class Solution {
    public static String reverseWords(String s) {
        String[] str = s.split(" ");
        String res = "";
        for(int i = str.length-1; i>=0; i--){
            if(!str[i].equals(""))
            {
                res += " " + str[i].trim();
            }
        }
        return res.trim();
    }
}
