Given an array of citations (each citation is a non-negative integer) of a researcher, write a function to compute the researcher's h-index.

According to the definition of h-index on Wikipedia: "A scientist has index h if h of his/her N papers have at least h citations each, and the other N âˆ’ h papers have no more than h citations each."

For example, given citations = [3, 0, 6, 1, 5], which means the researcher has 5 papers in total and each of them had received 3, 0, 6, 1, 5 citations respectively. Since the researcher has 3 papers with at least 3 citations each and the remaining two with no more than 3 citations each, his h-index is 3.

Note: If there are several possible values for h, the maximum one is taken as the h-index.

==============codes=================
//by MadDetective 
//with sorting
 public int hIndex(int[] citations) {
        if(citations==null || citations.length==0) return 0;
        Arrays.sort(citations);
        final int N = citations.length;
        int res = 0;
        for(int i=0; i<N; i++){
            if(N-i <= citations[i])
                return N-i;
        }
        return 0;
    }
    
// without sorting  
 public int hIndex(int[] citations){
        if(citations==null || citations.length==0) return 0;
        final int N = citations.length;
        int[] arr = new int[N+1];
        for(int i=0; i<N; i++){
            if(citations[i]>=N){
                arr[N]++;
            } else {
                arr[citations[i]]++;
            }
        }
        int counter=0, res = 0;
        for(int j=N; j>=0; j--){
            counter+= arr[j];
            if(counter>=j) return j;
        }
        return res;
    }
