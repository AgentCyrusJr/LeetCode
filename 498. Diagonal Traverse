Given a matrix of M x N elements (M rows, N columns), return all elements of the matrix in diagonal order as shown in the below image.

Example:
Input:
[
 [ 1, 2, 3 ],
 [ 4, 5, 6 ],
 [ 7, 8, 9 ]
]
Output:  [1,2,4,7,5,3,6,8,9]
Explanation:

Note:
The total number of elements of the given matrix will not exceed 10,000.
============codes===============
public class Solution {
    public int[] findDiagonalOrder(int[][] matrix) {
        int row = matrix.length;
        if (row == 0) return new int[0];
        int col = matrix[0].length;
        
        int[] result = new int[row*col];
        int i = 0, j = 0;
        int index = 0;
        boolean down = true;
        while(index != row*col){
            if(i == 0 && j == 0){
                if(j+1<col) result[index++] = matrix[i][j++];
                else
                    result[index++] = matrix[i++][j];
            } 
            else if(down){
                if(i>=0 && i<row && j>=0 && j<col)
                    result[index++] = matrix[i++][j--];
                else{
                    if(i >= row){
                        i = i - 1; j = j + 2; 
                    } 
                    else if(j < 0){
                        j = j + 1;
                    }
                    result[index++] = matrix[i--][j++];
                    down = false;
                }
                    
            }else if(!down){
                if(i>=0 && i<row && j>=0 && j<col)
                    result[index++] = matrix[i--][j++];
                else{
                    
                    if(j >= col){
                        j = j - 1; i = i + 2; 
                    } 
                    else if(i < 0){
                        i = i + 1;
                    }
                    result[index++] = matrix[i++][j--];
                    down = true;
                }
            }
        }
        
        return result;
    }
}
