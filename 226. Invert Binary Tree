Invert a binary tree.

     4
   /   \
  2     7
 / \   / \
1   3 6   9
to
     4
   /   \
  7     2
 / \   / \
9   6 3   1
====================code===================
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public TreeNode invertTree(TreeNode root) {
        if(root == null) return null;
        TreeNode temp;
        if(root.left!=null && root.right!=null){
        	temp = root.left;
        	root.left = root.right;
        	root.right = temp;
        	this.invertTree(root.left);
        	this.invertTree(root.right);
        }else if(root.left == null && root.right != null){
        	this.invertTree(root.right);
        	root.left = root.right;
        	root.right = null;
        }else if(root.right == null && root.left != null){
        	this.invertTree(root.left);
        	root.right = root.left;
        	root.left = null;
        }else
        	return root;
        return root;
    }
}

==============================
//Link: http://www.jiuzhang.com/solutions/invert-binary-tree/
public class Solution {
    /**
     * @param root: a TreeNode, the root of the binary tree
     * @return: nothing
     */
    public void invertBinaryTree(TreeNode root) {
        if (root == null) {
            return;
        }
        TreeNode temp = root.left;
        root.left = root.right;
        root.right = temp;
        
        invertBinaryTree(root.left);
        invertBinaryTree(root.right);
    }
}
