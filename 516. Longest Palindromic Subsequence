Given a string s, find the longest palindromic subsequence's length in s. You may assume that the maximum length of s is 1000.

Example 1:
Input:

"bbbab"
Output:
4
One possible longest palindromic subsequence is "bbbb".
Example 2:
Input:

"cbbd"
Output:
2
One possible longest palindromic subsequence is "bb".
====================codes===================
public class Solution {
    public int longestPalindromeSubseq(String s) {
        
        int len = s.length();
        if(len == 0) return 0;
        int[][] array = new int[len][len];
        for(int i = len-1 ; i >= 0; i--){
            array[i][i] = 1; 
            for(int j = i + 1; j < len; j++){
                if(s.charAt(i) == s.charAt(j)){
                    array[i][j] = array[i+1][j-1] + 2;
                }else{
                    array[i][j] = Math.max(array[i+1][j], array[i][j-1]);
                }
            }
        }
        return array[0][len-1];
    }
}
