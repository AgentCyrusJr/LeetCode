Given two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array.

Note:
You may assume that nums1 has enough space (size that is greater or equal to m + n) to hold additional elements from nums2. The number of elements initialized in nums1 and nums2 are m and n respectively.
==========================================
Start from the end, i = m + n - 1
compare nums1[i] with nums2[j] until i == 0
check if j > 0, move all the nums2[0..j] to nums[0..j]

Time: O(m+n)
Space: O(1)
==============codes=======================
//This one is faster
//by casegame
public void merge(int[] nums1, int m, int[] nums2, int n) {
    int i=m-1, j=n-1, index=m+n-1;
    while(i>=0 && j>=0){
        nums1[index--] = nums1[i] > nums2[j]? nums1[i--]:nums2[j--];
    }
    while(j>=0)
        nums1[index--] = nums2[j--];
}

//This one is easier
//by Waxc 
public class Solution {
  public void merge(int[] nums1, int m, int[] nums2, int n) {
    for(int i=0; i<n; i++) nums1[m+i] = nums2[i];
      Arrays.sort(nums1);
  }
}
=====================2017/10/30==================
class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
        for(int i = m+n-1; i>=n; i--){
            nums1[i] = nums1[i-n];
        }
        int pointer1 = 0, pointer2 = 0;
        int i = 0;
        while(i<m+n){
            if(pointer1 == m){
                nums1[i++] = nums2[pointer2++];
            }else if(pointer2 == n){
                nums1[i++] = nums1[pointer1+n];
                pointer1++;
            }else{
                if(nums1[pointer1+n]<nums2[pointer2]){
                    nums1[i++] = nums1[pointer1+n];
                    pointer1++;
                }else{
                    nums1[i++] = nums2[pointer2++];
                }
            }
        }
    }
}
=====================2019/10/23==========================
class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
        if(n == 0) return;
        if(m == 0){
            int i = 0;
            while(i < n){
                nums1[i] = nums2[i];
                i++;
            }
            return;
        }
        
        for(int i = m+n-1; i >= 0; i--){
            if(nums1[m-1] > nums2[n-1]){
                nums1[i] = nums1[m-1];
                m--;
            }else{
                nums1[i] = nums2[n-1];
                n--;
            }
            
            if(n == 0){
                break;
            }
            
            if(m == 0){
                int k = 0;
                while(k < n){
                    nums1[k] = nums2[k];
                    k++;
                }
                return;
            }
        }
    }
}
