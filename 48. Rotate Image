You are given an n x n 2D matrix representing an image.

Rotate the image by 90 degrees (clockwise).

Follow up:
Could you do this in-place?
===============codes================
public class Solution {
    public void rotate(int[][] matrix) {
        int length = matrix.length;
		int[][] copy = new int[length][length];
        for(int i = 0 ; i < length; i++){
        	for(int j = 0; j< length; j++){
        		copy[i][j] = matrix[length-j-1][i];
        	}
        }
        for(int i = 0 ; i < length; i++){
        	for(int j = 0; j< length; j++){
        		matrix[i][j] = copy[i][j];
        	}
        }
    }
}


//Following solution can do in-place
//by LuckyIdiot
//1. reverse up to down
//2. swap the symmetry

//If anticlockwise
//1. reverse left to right
//2. swap the symmetry
public class Solution {
    public void rotate(int[][] matrix) {
        for(int i = 0; i<matrix.length; i++){
            for(int j = i; j<matrix[0].length; j++){
                int temp = 0;
                temp = matrix[i][j];
                matrix[i][j] = matrix[j][i];
                matrix[j][i] = temp;
            }
        }
        for(int i =0 ; i<matrix.length; i++){
            for(int j = 0; j<matrix.length/2; j++){
                int temp = 0;
                temp = matrix[i][j];
                matrix[i][j] = matrix[i][matrix.length-1-j];
                matrix[i][matrix.length-1-j] = temp;
            }
        }
    }
}
