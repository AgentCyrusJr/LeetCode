Write an algorithm to determine if a number is "happy".

A happy number is a number defined by the following process: Starting with any positive integer, replace the number by the sum of the squares of its digits, and repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1. Those numbers for which this process ends in 1 are happy numbers.

Example: 19 is a happy number

12 + 92 = 82
82 + 22 = 68
62 + 82 = 100
12 + 02 + 02 = 1
=======================codes====================
public class Solution {
    public boolean isHappy(int n) {
    	if(n <= 0) return false;
        int num = 0, sum = 0;    
    	boolean flag = false;
        while(n!=0){
    		num = n % 10;
    		sum = num* num + sum;
    		n = n/10;
        }
        if(sum < 100){
        //all happy numbers less than 100 is listed here
        	if(sum == 7 ||sum == 10 || sum == 49 || sum == 94 || sum == 97 || sum == 79 || sum == 13 || sum == 31 || sum == 19 || sum == 91                         || sum == 28 || sum == 82 || sum == 68 || sum == 86 || sum == 1 || sum == 44 || sum == 23 || sum == 32 || sum ==70)
        		flag = true;
        	else
        		flag = false;
        }
        else{
        	flag = this.isHappy(sum);
        }
        return flag;
    }
}
