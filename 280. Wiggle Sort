Given an unsorted array nums, reorder it in-place such that nums[0] <= nums[1] >= nums[2] <= nums[3]....

For example, given nums = [3, 5, 2, 1, 6, 4], one possible answer is [1, 6, 2, 5, 3, 4].
=============codes===========
//This is the same code with 324. Wiggle Sort II.
//324 is the followup of this problem. Some modification should be made to meet its need
public class Solution {
    public void wiggleSort(int[] nums) {
        if(nums.length == 0) return;
		int[] copy = nums.clone();
		Arrays.sort(copy);
		if(nums.length%2 ==0){
			for(int i = 0 ; i < nums.length; i = i + 2){
				nums[nums.length-1-i] = copy[(i+nums.length)/2];
			}
			for(int j = 1 ; j < nums.length; j = j +2){
				nums[nums.length-1-j] = copy[(j-1)/2];
			}
		}else{
			for(int i = 0 ; i < nums.length; i = i + 2){
				nums[nums.length-1-i] = copy[i/2];
			}
			for(int j = 1 ; j < nums.length; j = j +2){
				nums[nums.length-1-j] = copy[(j+nums.length)/2];
			}
		}
    }
}
