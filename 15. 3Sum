Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.

Note: The solution set must not contain duplicate triplets.

For example, given array S = [-1, 0, 1, 2, -1, -4],

A solution set is:
[
  [-1, 0, 1],
  [-1, -1, 2]
]
===================================
Time: O(N^2)
Space: O(N^2)
===============codes===============
public class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
	Arrays.sort(nums);
	int length = nums.length;
	List<List<Integer>> sum_list = new ArrayList<List<Integer>>();
        if(length < 3)
            return sum_list;
        for(int i=0; i<length - 2; i++){
            int left = i + 1;
            int right = length - 1;
            while(left < right){
                int sum = nums[left] + nums[right] + nums[i];
                if(sum == 0){
                    List<Integer> list = new ArrayList<Integer>();
                    list.add(nums[left]); list.add(nums[right]); list.add(nums[i]);
                    if(!sum_list.contains(list)){
                    	sum_list.add(list);
                    }
                    right--; left++;
                }else if(sum > 0){
                    right--;
                }else{
                    left++;
                }
            }
           
        }
        return sum_list;  
    }
}

