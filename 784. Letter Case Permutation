Given a string S, we can transform every letter individually to be lowercase or uppercase to create another string.  Return a list of all possible strings we could create.

Examples:
Input: S = "a1b2"
Output: ["a1b2", "a1B2", "A1b2", "A1B2"]

Input: S = "3z4"
Output: ["3z4", "3Z4"]

Input: S = "12345"
Output: ["12345"]
Note:

S will be a string with length at most 12.
S will consist only of letters or digits.
================codes==============
class Solution {
    public List<String> letterCasePermutation(String S) {
        
        S = S.toUpperCase();
        List<String> list = new ArrayList<String>();
        list.add("");
        for(char ch: S.toCharArray()){
            int alpabet_index = ch - 'A';
            if(ch>='A' && ch<='Z'){
                int len = list.size();
                if(len == 0){
                    list.add(""+(char)(alpabet_index+'A'));
                    list.add(""+(char)(alpabet_index+'a'));
                }else{
                    for(int i = 0; i < len; i++){
                        
                        
                        list.add(list.get(i)+(char)(alpabet_index+'a'));
                        list.set(i, list.get(i)+ch);
                    }
                }
            }else{
                if(list.size() == 0){
                    list.add(ch+"");
                }else{
                    for(int i = 0; i < list.size(); i++){
                        list.set(i, list.get(i)+""+ch);
                    }
                }
                
            }
        }
        return list;
    }
}
