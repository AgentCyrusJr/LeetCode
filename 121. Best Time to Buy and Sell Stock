#Say you have an array for which the ith element is the price of a given stock on day i.

#If you were only permitted to complete at most one transaction (ie, buy one and sell one share of the stock), design an algorithm to find
#the maximum profit.
===============
//by scott 
public int maxProfit(int[] prices) {
		 if (prices.length == 0) {
			 return 0 ;
		 }		
		 int max = 0 ;
		 int sofarMin = prices[0] ;
	     for (int i = 0 ; i < prices.length ; ++i) {
	    	 if (prices[i] > sofarMin) {
	    		 max = Math.max(max, prices[i] - sofarMin) ;
	    	 } else{
	    		sofarMin = prices[i];  
	    	 }
	     }	     
	    return  max ;
	 }
===================2017/10/24===============
class Solution {
    public int maxProfit(int[] prices) {
        int maxCurrent = 0;
        int maxSofar = 0;
        for(int i = 1 ; i<prices.length; i++){
            maxCurrent = Math.max(0, maxCurrent - prices[i-1] + prices[i]);
            maxSofar = Math.max(maxCurrent, maxSofar);
        
        }
        return maxSofar;
        
    }
}
