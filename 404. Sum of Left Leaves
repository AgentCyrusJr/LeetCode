Find the sum of all left leaves in a given binary tree.

Example:

    3
   / \
  9  20
    /  \
   15   7

There are two left leaves in the binary tree, with values 9 and 15 respectively. Return 24.

=====================codes======================
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
	public int sumOfLeftLeaves(TreeNode root) {
        int sum = 0;
        if(root == null) return 0;
        if(root.left != null){
        	if(root.left.left == null && root.left.right==null){
        		sum = sum + root.left.val + this.sumOfLeftLeaves(root.left);
        	}
        	else
        	    sum += this.sumOfLeftLeaves(root.left);
        }
        if(root.right != null){
        	sum = sum + this.sumOfLeftLeaves(root.right);
        }
        return sum;
    }
}
